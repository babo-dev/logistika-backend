## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User management'
description: |-

  APIs for managing users
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: 'Get a JWT via given credentials.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: hintz.mose@example.com
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 6 characters.'
        required: true
        example: f
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/user/register
    metadata:
      title: 'Register a User.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be between 2 and 100 characters.'
        required: true
        example: ljnstqtkssrhxrzlfzajmdkxbkhktebxwid
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 100 characters.'
        required: true
        example: lnijztmikbzispg
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 6 characters.'
        required: true
        example: xcfbx
        type: string
        custom: []
      phone:
        name: phone
        description: ''
        required: true
        example: ea
        type: string
        custom: []
      country:
        name: country
        description: 'A title of a country.'
        required: true
        example: Tongo
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/user/logout
    metadata:
      title: 'Log the user out (Invalidate the token).'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/user/refresh
    metadata:
      title: 'Refresh a token.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/user/update
    metadata:
      title: 'Update a User.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'A title of a country.'
        required: true
        example: Mergen
        type: string
        custom: []
      country:
        name: country
        description: 'A title of a country.'
        required: false
        example: Tongo
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user/user-profile
    metadata:
      title: 'Get the authenticated User.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user/images
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
